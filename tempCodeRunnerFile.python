from stable_baselines3 import DQN
from StockTradingEnv import StockTradingEnv
import pandas as pd
import numpy as np

# 加载数据
dates = [i for i in range(365)]
data = pd.DataFrame({ # 股票历史数据，包含开盘价、收盘价等
    "Date": dates,
    "Open": np.random.uniform(100, 200, len(dates)),
    "High": np.random.uniform(200, 300, len(dates)),
    "Low": np.random.uniform(50, 100, len(dates)),
    "Close": np.random.uniform(100, 200, len(dates)),
    "Volume": np.random.randint(100000, 2000000, len(dates))
})

# 创建环境
env = StockTradingEnv(data)

# 训练 DQN
model = DQN("MlpPolicy", env, verbose=1)
model.learn(total_timesteps=50000)

# 测试智能体
obs = env.reset()
for _ in range(100):
    action, _states = model.predict(obs, deterministic=True)
    obs, rewards, done, info = env.step(action)
    print(obs, rewards, done, info)
    if done:
        break
